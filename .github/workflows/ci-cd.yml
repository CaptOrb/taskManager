name: CI/CD Pipeline
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
      
      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build and Test Backend
        run: |
          cd backend
          mvn clean install

  build-frontend:
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.18'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install and Build Frontend
        run: |
          cd frontend
          npm ci
          npm run build

  docker-test-build:
    runs-on: ubuntu-24.04-arm
    needs: [build-backend, build-frontend]
    if: github.event_name == 'pull_request'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Build Docker Images (No Push)
        run: |
          docker compose build
        env:
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_MYSQL_ROOT_PASSWORD }}
          MYSQLDB_DATABASE: "tasks"
          MYSQLDB_LOCAL_PORT: "3306"
          MYSQLDB_DOCKER_PORT: "3306"
          DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}

  docker-build-and-push:
    runs-on: ubuntu-24.04-arm
    needs: [build-backend, build-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and Push Frontend Image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          target: prod
          push: true
          tags: conorb1/task-frontend:vite,conorb1/task-frontend:latest
          cache-from: type=registry,ref=conorb1/task-frontend:buildcache
          cache-to: type=registry,ref=conorb1/task-frontend:buildcache,mode=max
      
      - name: Build and Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: conorb1/task-backend:latest
          cache-from: type=registry,ref=conorb1/task-backend:buildcache
          cache-to: type=registry,ref=conorb1/task-backend:buildcache,mode=max

