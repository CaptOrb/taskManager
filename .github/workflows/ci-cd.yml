name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-backend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Clean and Build Backend with Maven
        run: |
          cd backend
          mvn clean install -DskipTests
        
      - name: Run Tests with Maven
        run: |
          cd backend
          mvn test

  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install and Build Frontend
        run: |
          cd frontend
          npm install
          CI=false npm run build

  docker-build-and-push:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker Image with Docker Compose
        env:
          DB_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}                
          MYSQL_ROOT_PASSWORD: ${{ secrets.TEST_MYSQL_ROOT_PASSWORD }} # password just for test purposes. not used in production.
          MYSQLDB_DATABASE: "tasks"                     
          MYSQLDB_LOCAL_PORT: "3306"                 
          MYSQLDB_DOCKER_PORT: "3306"                  
          DB_USERNAME: ${{ secrets.TEST_DB_USERNAME }}                      
        run: |
          docker compose build

  docker-push:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, docker-build-and-push]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Images
        run: |
          docker buildx create --name mybuilder --use || docker buildx use mybuilder
          
          docker buildx build --platform linux/amd64,linux/arm64 \
            --target prod -t conorb1/task-frontend:vite --push frontend/
          
          docker buildx build --platform linux/amd64,linux/arm64 -t conorb1/task-backend --push backend/
